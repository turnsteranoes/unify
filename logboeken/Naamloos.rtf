{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 from flask import Flask, request, jsonify\
import openai\
import os\
\
app = Flask(__name__)\
\
openai.api_key = os.getenv("OPENAI_API_KEY")\
\
@app.route('/analyze', methods=['POST'])\
def analyze():\
    data = request.get_json()\
    user_text = data.get("text", "")\
\
    prompt = f"""\
Extract this information from the following chat message:\
- Name\
- Job\
- Plans (today or in the future)\
- Appearance\
- Hobbies\
- Relationship status\
- Kids (how many, names if possible)\
- Family (siblings, parents, others)\
- Sexual preferences\
- Health conditions\
- Location\
- Vehicles\
\
Chat message:\
\\"\{user_text\}\\"\
\
Return your answer as a list of key-value pairs.\
"""\
\
    try:\
        response = openai.ChatCompletion.create(\
            model="gpt-4",\
            messages=[\{"role": "user", "content": prompt\}],\
            temperature=0.2,\
        )\
        result = response['choices'][0]['message']['content']\
        return jsonify(\{ "result": result.strip() \})\
\
    except Exception as e:\
        return jsonify(\{ "error": str(e) \}), 500\
\
if __name__ == '__main__':\
    app.run(host='0.0.0.0', port=5000)\
}